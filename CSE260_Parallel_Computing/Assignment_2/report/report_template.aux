\relax 
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{toc}{\contentsline {section}{\numberline {1}\textbf  {High Performance Matrix Multiplication on a GPU}}{1}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:all_double_16}{{\caption@xref {fig:all_double_16}{ on input line 104}}{2}}
\newlabel{sub@fig:all_double_16}{{}{2}}
\newlabel{fig:all_double_32}{{\caption@xref {fig:all_double_32}{ on input line 109}}{2}}
\newlabel{sub@fig:all_double_32}{{}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces Double Precision Arithmetic Used. The left figure presents the performance of 16$\times $16 thread blocks, while the right figure uses 32$\times $32 thread blocks.\relax }}{2}}
\newlabel{fig:multi1}{{1.1}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}\textbf  {Multicore Implementation}}{2}}
\newlabel{fig:all_single_16}{{\caption@xref {fig:all_single_16}{ on input line 120}}{3}}
\newlabel{sub@fig:all_single_16}{{}{3}}
\newlabel{fig:all_single_32}{{\caption@xref {fig:all_single_32}{ on input line 125}}{3}}
\newlabel{sub@fig:all_single_32}{{}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces Single Precision Arithmetic Used. The left figure presents the performance of 16$\times $16 thread blocks, while the right figure uses 32$\times $32 thread blocks.\relax }}{3}}
\newlabel{fig:multi2}{{1.2}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {3}\textbf  {Naive Implementation}}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces Naive algorithm's Performance\relax }}{4}}
\newlabel{fig:naive}{{3.1}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {4}\textbf  {Tiling for Improved computation Ratio}}{4}}
\newlabel{fig:tiled}{{\caption@xref {fig:tiled}{ on input line 165}}{5}}
\newlabel{sub@fig:tiled}{{}{5}}
\newlabel{fig:tiled_vs_naive}{{\caption@xref {fig:tiled_vs_naive}{ on input line 170}}{5}}
\newlabel{sub@fig:tiled_vs_naive}{{}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.1}{\ignorespaces Left: The performance of the Tiled Kernel. Right: Tiled kernel compared against the naive implementation.\relax }}{5}}
\newlabel{fig:multi3}{{4.1}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {5}\textbf  {Memory Coalescing}}{5}}
\newlabel{fig:coalesced}{{\caption@xref {fig:coalesced}{ on input line 191}}{6}}
\newlabel{sub@fig:coalesced}{{}{6}}
\newlabel{fig:coalesced_vs_tiled}{{\caption@xref {fig:coalesced_vs_tiled}{ on input line 196}}{6}}
\newlabel{sub@fig:coalesced_vs_tiled}{{}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.1}{\ignorespaces Left: The performance of the Memory Coalescing Kernel. Right: Memory Coalescing kernel compared against all previous optimizations.\relax }}{6}}
\newlabel{fig:multi4}{{5.1}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {6}\textbf  {Avoiding Memory Bank Conflicts}}{6}}
\newlabel{fig:conflicts}{{\caption@xref {fig:conflicts}{ on input line 216}}{7}}
\newlabel{sub@fig:conflicts}{{}{7}}
\newlabel{fig:conflicts_vs_coalesced}{{\caption@xref {fig:conflicts_vs_coalesced}{ on input line 221}}{7}}
\newlabel{sub@fig:conflicts_vs_coalesced}{{}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.1}{\ignorespaces Left: The performance of the Bank-Conflict-Avoiding Kernel. Right: This kernel compared against all previous optimizations.\relax }}{7}}
\newlabel{fig:multi5}{{6.1}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {7}\textbf  {Multiply--Add Balancing}}{7}}
\newlabel{fig:balancing}{{\caption@xref {fig:balancing}{ on input line 240}}{8}}
\newlabel{sub@fig:balancing}{{}{8}}
\newlabel{fig:balancing_vs_conflicts}{{\caption@xref {fig:balancing_vs_conflicts}{ on input line 245}}{8}}
\newlabel{sub@fig:balancing_vs_conflicts}{{}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {7.1}{\ignorespaces Left: The performance of the Multiply-Add Balancing Kernel. Right: This kernel compared against all previous optimizations.\relax }}{8}}
\newlabel{fig:multi6}{{7.1}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {8}\textbf  {Prefetching}}{9}}
\newlabel{fig:prefetch}{{\caption@xref {fig:prefetch}{ on input line 267}}{9}}
\newlabel{sub@fig:prefetch}{{}{9}}
\newlabel{fig:prefetch_vs_balancing}{{\caption@xref {fig:prefetch_vs_balancing}{ on input line 272}}{9}}
\newlabel{sub@fig:prefetch_vs_balancing}{{}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {8.1}{\ignorespaces Left: The performance of the Prefetching Kernel. Right: Prefetching kernel compared against all previous optimizations.\relax }}{9}}
\newlabel{fig:multi7}{{8.1}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {9}\textbf  {Unrolling}}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {10}\textbf  {Conclusions}}{9}}
\newlabel{fig:unroll}{{\caption@xref {fig:unroll}{ on input line 286}}{10}}
\newlabel{sub@fig:unroll}{{}{10}}
\newlabel{fig:unroll_vs_prefetch}{{\caption@xref {fig:unroll_vs_prefetch}{ on input line 291}}{10}}
\newlabel{sub@fig:unroll_vs_prefetch}{{}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {9.1}{\ignorespaces Left: The performance of the Loop Unrolling Kernel. Right: This kernel compared against all previous optimizations.\relax }}{10}}
\newlabel{fig:multi8}{{9.1}{10}}
